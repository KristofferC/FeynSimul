# This file is part of FeynSimul.
#
# FeynSimul is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FeynSimul is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with FeynSimul.  If not, see <http://www.gnu.org/licenses/>.

# -*- coding: utf-8 -*-


class Pisa3:

    """ Sum of two gaussian potentials.Three particle system but two
    degrees
    of freedowm with Jacobi coordinates
    """

    def __init__(self):

        self.userCode = """ inline float sqr(float x){return x*x;}
        		   inline float quad(float x){return x*x*x*x;}
                           #define SQRT3 1.732050807568877293               
                           #define INVSQRT2 0.707106781187
                           #define INVSQRT3 0.577350269190
                           #define INVSQRT4 0.5
                           #define INVSQRT6 0.408248290464
        """
        self.DOF = 6
        #self.energyOp ="""native_sqrt(2.0f*x1*x1+2.0f*x2*x2+2.0f*x3*x3)"""
        
        self.energyOp = """ native_exp(-0.8604556619274776f*sqr(x1) - 0.8604556619274776f*sqr(x2) - 0.8604556619274776f*sqr(x3))*(-1.2269999999999996f + 1.0557790971850147f*sqr(x1) + 1.0557790971850147f*sqr(x2) + 1.0557790971850147f*sqr(x3)) """

        self.potential = """- 1.2269999999999996f*native_exp(-0.8604556619274776f*sqr(x1) - 0.8604556619274776f*sqr(x2) - 0.8604556619274776f*sqr(x3))"""
        #self.LBpotential = """native_exp(-2.5813669857824326*sqr(x1) - 2.5813669857824326*sqr(x2) - 2.5813669857824326*sqr(x3))*(-1.2269999999999996*native_exp(1.7209113238549552*sqr(x1) + 1.7209113238549552*sqr(x2) + 1.7209113238549552*sqr(x3)) + native_exp(0.8604556619274776*sqr(x1) + 0.8604556619274776*sqr(x2)  + 0.8604556619274776*sqr(x3))*sqr(eps)*(0.18577825034213413*sqr(x1) + 0.18577825034213413*sqr(x2) + 0.18577825034213413*sqr(x3)))"""
        self.LBenergyOp = """native_exp(-2.5813669857824326*sqr(x1) - 2.5813669857824326*sqr(x2) - 2.5813669857824326*sqr(x3))*(native_exp(0.8604556619274775*sqr(x1) + 0.8604556619274775*sqr(x2) + 0.8604556619274775*sqr(x3))*sqr(eps)*(-0.31970789473973926*quad(x1) - 0.31970789473973926*quad(x2) - 0.31970789473973926*quad(x3) + sqr(x2)*(0.37155650068426826 - 0.6394157894794785*sqr(x3)) + sqr(x1)*(0.37155650068426826 - 0.6394157894794785*sqr(x2) - 0.6394157894794785*sqr(x3)) + 0.37155650068426826*sqr(x3)) + native_exp(1.720911323854955*sqr(x1) + 1.720911323854955*sqr(x2) + 1.720911323854955*sqr(x3))*(-1.2269999999999996 + 1.0557790971850145*sqr(x1) + 1.0557790971850145*sqr(x2) + 1.0557790971850145*sqr(x3)))"""
        
        #self.potential = self.LBpotential
       # self.energyOp = self.LBenergyOp      

######### ONLY TWO BODY POTENTIAL ##########

        self.potential = """-1.227*native_exp(-0.8604556620299615*(sqr(x1) + sqr(x2) + sqr(x3))) - 1.227*native_exp(-0.21511391550749037*(sqr(x1) + sqr(x2) + sqr(x3) + 3.0f*sqr(x4) + 3.0f*sqr(x5) + 3.0f*sqr(x6) - 2.0f*SQRT3*x1*x4 - 2.0f*SQRT3*x2*x5 - 2.0f*SQRT3*x3*x6)) - 1.227*native_exp(-0.21511391550749037*(sqr(x1) + sqr(x2) + sqr(x3) + 3.0f*sqr(x4) + 3.0f*sqr(x5) + 3.0f*sqr(x6) + 2.0f*SQRT3*x1*x4 + 2.0f*SQRT3*x2*x5 + 2.0f*SQRT3*x3*x6))""" 
        self.energyOp = """0.00007092173220669096*(2.0f*native_exp(-0.8604462943692912*(sqr(x1) + sqr(x2) + sqr(x3)))*(-8649.0f + 7442.0f*sqr(x1) + 7442.0f*sqr(x2) + 7442.0f*sqr(x3)) + native_exp(-0.2151115735923228*(sqr(x1) + sqr(x2) + sqr(x3) + 3.0f*(sqr(x4) + sqr(x5)) + 3.0f*sqr(x6) - 2.0f*SQRT3*x1*x4 - 2.0f*SQRT3*x2*x5 - 2.0f*SQRT3*x3*x6))*(-17298.0f + 3721.0f*sqr(x1) + 3721.0f*sqr(x2) + 3721.0f*sqr(x3) + 11163.0f*sqr(x4) + 11163.0f*sqr(x5) + 11163.0f*sqr(x6) - 7442.0f*SQRT3*x1*x4 - 7442.0f*SQRT3*x2*x5 - 7442.0f*SQRT3*x3*x6) + native_exp(-0.2151115735923228*(sqr(x1) + sqr(x2) + sqr(x3) + 3.0f*(sqr(x4) + sqr(x5)) + 3.0f*sqr(x6) + 2.0f*SQRT3*x1*x4 + 2.0f*SQRT3*x2*x5 + 2.0f*SQRT3*x3*x6))*(-17298.0f + 3721.0f*sqr(x1) + 3721.0f*sqr(x2) + 3721.0f*sqr(x3) + 11163.0f*sqr(x4) + 11163.0f*sqr(x5) + 11163.0f*sqr(x6) + 7442.0f*SQRT3*x1*x4 + 7442.0f*SQRT3*x2*x5 + 7442.0f*SQRT3*x3*x6))"""


##### THREE BODY POTENTIAL #####

        
#W0 = 1.4742 rho0 = 1 
        self.potential = """-2.4540000000000006*exp(-1.7209113238549558*sqr(x1) - 1.7209113238549558*sqr(x2) - 1.7209113238549558*sqr(x3)) + 0.5580000000000002*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6)) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)"""

        self.energyOp = """-2.4540000000000006*exp(-1.7209113238549558*sqr(x1) - 1.7209113238549558*sqr(x2) - 1.7209113238549558*sqr(x3)) + 0.5580000000000002*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6)) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6) + 0.5*(x4*(-2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6)*(-1.4903529241187008*x1 - 2.5813669857824335*x4) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)*(1.4903529241187008*x1 - 2.5813669857824335*x4) - 1.5094355816250014*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6))*x4) + x1*(8.446232777480125*exp(-1.7209113238549558*sqr(x1) - 1.7209113238549558*sqr(x2) - 1.7209113238549558*sqr(x3))*x1 - 1.5094355816250014*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6))*x1 - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6)*(-0.8604556619274779*x1 - 1.4903529241187008*x4) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)*(-0.8604556619274779*x1 + 1.4903529241187008*x4)) + x5*(-2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6)*(-1.4903529241187008*x2 - 2.5813669857824335*x5) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)*(1.4903529241187008*x2 - 2.5813669857824335*x5) - 1.5094355816250014*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6))*x5) + x2*(8.446232777480125*exp(-1.7209113238549558*sqr(x1) - 1.7209113238549558*sqr(x2) - 1.7209113238549558*sqr(x3))*x2 - 1.5094355816250014*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6))*x2 - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6)*(-0.8604556619274779*x2 - 1.4903529241187008*x5) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)*(-0.8604556619274779*x2 + 1.4903529241187008*x5)) + x6*(-2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6)*(-1.4903529241187008*x3 - 2.5813669857824335*x6) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)*(1.4903529241187008*x3 - 2.5813669857824335*x6) - 1.5094355816250014*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6))*x6) + x3*(8.446232777480125*exp(-1.7209113238549558*sqr(x1) - 1.7209113238549558*sqr(x2) - 1.7209113238549558*sqr(x3))*x3 - 1.5094355816250014*exp(-1.3525408437500008*sqr(x1) - 1.3525408437500008*sqr(x2) - 1.3525408437500008*sqr(x3) - 1.3525408437500008*sqr(x4) - 1.3525408437500008*sqr(x5) - 1.3525408437500008*sqr(x6))*x3 - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) - 1.4903529241187008*x1*x4 - 1.4903529241187008*x2*x5 - 1.4903529241187008*x3*x6)*(-0.8604556619274779*x3 - 1.4903529241187008*x6) - 2.4540000000000006*exp(-0.43022783096373896*sqr(x1) - 0.43022783096373896*sqr(x2) - 0.43022783096373896*sqr(x3) - 1.2906834928912168*sqr(x4) - 1.2906834928912168*sqr(x5) - 1.2906834928912168*sqr(x6) + 1.4903529241187008*x1*x4 + 1.4903529241187008*x2*x5 + 1.4903529241187008*x3*x6)*(-0.8604556619274779*x3 + 1.4903529241187008*x6)))"""
